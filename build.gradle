plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    /*querydsl 추가*/
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'org.geon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    /*tymeleaf extras 추가*/
    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time', version: '3.0.4.RELEASE'

    /*querydsl 추가*/
    implementation 'com.querydsl:querydsl-jpa'

    /*테스트환경에서 Log4j2 사용*/
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    /* 썸네일 추가 */
    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.14'

}

test {
    useJUnitPlatform()
}
/*querydsl 추가*/
def querydslDir = "$buildDir/generated/querydsl"
/*querydsl 추가*/
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
/*querydsl 추가*/
sourceSets {
    main.java.srcDir querydslDir
}
/*querydsl 추가*/
configurations {
    querydsl.extendsFrom compileClasspath
}
/*querydsl 추가*/
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
